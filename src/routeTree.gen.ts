/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as GenerateUsernameRouteImport } from './routes/generate/$username'

const ReadmeLazyRouteImport = createFileRoute('/readme')()
const IndexLazyRouteImport = createFileRoute('/')()

const ReadmeLazyRoute = ReadmeLazyRouteImport.update({
  id: '/readme',
  path: '/readme',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/readme.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const GenerateUsernameRoute = GenerateUsernameRouteImport.update({
  id: '/generate/$username',
  path: '/generate/$username',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/readme': typeof ReadmeLazyRoute
  '/generate/$username': typeof GenerateUsernameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/readme': typeof ReadmeLazyRoute
  '/generate/$username': typeof GenerateUsernameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/readme': typeof ReadmeLazyRoute
  '/generate/$username': typeof GenerateUsernameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/readme' | '/generate/$username'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/readme' | '/generate/$username'
  id: '__root__' | '/' | '/readme' | '/generate/$username'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ReadmeLazyRoute: typeof ReadmeLazyRoute
  GenerateUsernameRoute: typeof GenerateUsernameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/readme': {
      id: '/readme'
      path: '/readme'
      fullPath: '/readme'
      preLoaderRoute: typeof ReadmeLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/generate/$username': {
      id: '/generate/$username'
      path: '/generate/$username'
      fullPath: '/generate/$username'
      preLoaderRoute: typeof GenerateUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ReadmeLazyRoute: ReadmeLazyRoute,
  GenerateUsernameRoute: GenerateUsernameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
